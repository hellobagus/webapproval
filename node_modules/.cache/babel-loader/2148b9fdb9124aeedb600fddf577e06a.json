{"ast":null,"code":"import axios from \"axios\";\nimport httpClient from \"../data/httpClient\";\n\nclass UserController {\n  constructor() {\n    this.login = async (email, password) => {\n      try {\n        const result = await httpClient.request({\n          url: `${this.basePath}/login`,\n          method: \"POST\",\n          data: {\n            email,\n            password,\n            token: \"\",\n            token_firebase: \"token test\",\n            device: \"ios\",\n            mac: \"mac test\",\n            app: \"A\"\n          }\n        }); // alert(result.Pesan);\n\n        if (result.Error) {\n          return Promise.reject(result.Pesan);\n        } else {\n          return result;\n        }\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    };\n\n    this.resetPassword = async (conPass, newPass, email) => {\n      try {\n        const result = await httpClient.request({\n          url: `${this.basePath}/resetpass_newlogin`,\n          method: \"POST\",\n          data: {\n            conpass: conPass,\n            newpass: newPass,\n            email: email\n          }\n        });\n        return result;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    };\n\n    this.changePassword = async (email, pass, conpass) => {\n      try {\n        const result = await httpClient.request({\n          url: `${this.profilePath}/changePassReact`,\n          method: \"POST\",\n          data: {\n            email: email,\n            password: pass,\n            cpassword: conpass\n          }\n        });\n        return result;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    };\n\n    this.saveProfile = async data => {\n      try {\n        const result = await httpClient.request({\n          url: `${this.profilePath}/save`,\n          method: \"POST\",\n          data: {\n            UserName: data.email,\n            Name: data.name,\n            Handphone: data.phone,\n            Gender: data.gender,\n            wherename: data.name\n          }\n        });\n        return result;\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    };\n\n    this.logout = () => null;\n\n    this.basePath = \"/c_auth\";\n    this.profilePath = \"/c_profil\";\n  }\n\n}\n\nexport default new UserController();","map":{"version":3,"sources":["/Users/bagus/Appiness_APP/src/services/user.service.js"],"names":["axios","httpClient","UserController","constructor","login","email","password","result","request","url","basePath","method","data","token","token_firebase","device","mac","app","Error","Promise","reject","Pesan","error","resetPassword","conPass","newPass","conpass","newpass","changePassword","pass","profilePath","cpassword","saveProfile","UserName","Name","name","Handphone","phone","Gender","gender","wherename","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport httpClient from \"../data/httpClient\";\n\nclass UserController {\n  constructor() {\n    this.basePath = \"/c_auth\";\n    this.profilePath = \"/c_profil\";\n  }\n\n  login = async (email, password) => {\n    try {\n      const result = await httpClient.request({\n        url: `${this.basePath}/login`,\n        method: \"POST\",\n        data: {\n          email,\n          password,\n          token: \"\",\n          token_firebase: \"token test\",\n          device: \"ios\",\n          mac: \"mac test\",\n          app: \"A\"\n        }\n      });\n\n      // alert(result.Pesan);\n\n      if (result.Error) {\n        return Promise.reject(result.Pesan);\n      } else {\n        return result;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n  resetPassword = async (conPass, newPass, email) => {\n    try {\n      const result = await httpClient.request({\n        url: `${this.basePath}/resetpass_newlogin`,\n\n        method: \"POST\",\n        data: {\n          conpass: conPass,\n          newpass: newPass,\n          email: email\n        }\n      });\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  changePassword = async (email, pass, conpass) => {\n    try {\n      const result = await httpClient.request({\n        url: `${this.profilePath}/changePassReact`,\n        method: \"POST\",\n        data: {\n          email: email,\n          password: pass,\n          cpassword: conpass\n        }\n      });\n\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  saveProfile = async data => {\n    try {\n      const result = await httpClient.request({\n        url: `${this.profilePath}/save`,\n        method: \"POST\",\n        data: {\n          UserName: data.email,\n          Name: data.name,\n          Handphone: data.phone,\n          Gender: data.gender,\n          wherename: data.name\n        }\n      });\n\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  logout = () => null;\n}\n\nexport default new UserController();\n"]},"metadata":{},"sourceType":"module"}