{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bagus/Appiness_APP/src/LoginPage/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Flex, Box, Heading, FormControl, FormLabel, Input, Button, CircularProgress, Text, InputGroup, InputRightElement, Icon } from '@chakra-ui/core';\nimport { login } from \"../actions\";\n\nfunction LoginPage() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const {\n    email,\n    password\n  } = inputs;\n  const loggingIn = useSelector(state => state.authentication.loggingIn);\n  const alert = useSelector(state => state.alert);\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   dispatch(userActions.logout());\n  // }, []);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(inputs => ({ ...inputs,\n      [name]: value\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitted(true);\n\n    if (email && password) {\n      dispatch(login(email, password));\n    }\n  }\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      maxWidth: \"500px\",\n      borderWidth: 1,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          my: 4,\n          textAlign: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            name: \"form\",\n            className: \"form\",\n            onSubmit: handleSubmit,\n            children: [alert.message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `alert ${alert.type}`,\n              children: alert.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                name: \"email\",\n                value: email,\n                onChange: handleChange,\n                className: \"form-control\" + (submitted && !email ? \" is-invalid\" : \"\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 11\n              }, this), submitted && !email && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: \"Username is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              isRequired: true,\n              mt: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"password\",\n                  value: password,\n                  onChange: handleChange,\n                  className: \"form-control\" + (submitted && !password ? \" is-invalid\" : \"\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                  width: \"3rem\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    h: \"1.5rem\",\n                    size: \"sm\",\n                    onClick: handlePasswordVisibility,\n                    children: showPassword ? /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"view-off\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"view\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variantColor: \"teal\",\n              variant: \"outline\",\n              type: \"submit\",\n              width: \"full\",\n              mt: 4,\n              children: loggingIn ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                isIndeterminate: true,\n                size: \"24px\",\n                color: \"teal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this) : 'Sign In'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"rBGy9t+Cc4HFqUUaIiPtl9xZvqU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = LoginPage;\nexport { LoginPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/bagus/Appiness_APP/src/LoginPage/LoginPage.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Flex","Box","Heading","FormControl","FormLabel","Input","Button","CircularProgress","Text","InputGroup","InputRightElement","Icon","login","LoginPage","inputs","setInputs","email","password","submitted","setSubmitted","loggingIn","state","authentication","alert","dispatch","handleChange","e","name","value","target","handleSubmit","preventDefault","showPassword","setShowPassword","handlePasswordVisibility","message","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  Text,\n  InputGroup,\n  InputRightElement,\n  Icon\n} from '@chakra-ui/core';\nimport { login } from \"../actions\";\n\nfunction LoginPage() {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const { email, password } = inputs;\n  const loggingIn = useSelector((state) => state.authentication.loggingIn);\n  const alert = useSelector((state) => state.alert);\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(userActions.logout());\n  // }, []);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setSubmitted(true);\n    if (email && password) {\n      dispatch(login(email, password));\n    }\n  }\n  const [showPassword, setShowPassword] = useState(false);\n\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n\n\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box\n        p={8}\n        maxWidth=\"500px\"\n        borderWidth={1}\n        borderRadius={8}\n        boxShadow=\"lg\"\n      >\n        <div>\n   <Box textAlign=\"center\">\n              <Heading>Login</Heading>\n            </Box>\n            <Box my={4} textAlign=\"left\">\n      <form name=\"form\" className=\"form\" onSubmit={handleSubmit}>\n        {alert.message && (\n          <div className={`alert ${alert.type}`}>{alert.message}</div>\n        )}\n        <FormControl>\n          <FormLabel>Username</FormLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            className={\n              \"form-control\" + (submitted && !email ? \" is-invalid\" : \"\")\n            }\n          />\n          {submitted && !email && (\n            <div className=\"invalid-feedback\">Username is required</div>\n          )}\n        </FormControl>\n        <FormControl isRequired mt={6}>\n          <FormLabel>Password</FormLabel>\n          <InputGroup>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            className={\n              \"form-control\" + (submitted && !password ? \" is-invalid\" : \"\")\n            }\n          />\n            <InputRightElement width=\"3rem\">\n                      <Button\n                        h=\"1.5rem\"\n                        size=\"sm\"\n                        onClick={handlePasswordVisibility}\n                      >\n                        {showPassword ? (\n                          <Icon name=\"view-off\" />\n                        ) : (\n                          <Icon name=\"view\" />\n                        )}\n                      </Button>\n                    </InputRightElement>\n          {/* {submitted && !password && (\n            <div className=\"invalid-feedback\">Password is required</div>\n          )} */}\n          \n          </InputGroup>\n        </FormControl>\n        <Button\n                  variantColor=\"teal\"\n                  variant=\"outline\"\n                  type=\"submit\"\n                  width=\"full\"\n                  mt={4}\n                >\n            {loggingIn ? (\n              <CircularProgress   isIndeterminate\n              size=\"24px\"\n              color=\"teal\"/>\n            ) : (\n                'Sign In'\n            )}\n          </Button>\n      </form>\n      </Box>\n      </div>\n    </Box>\n    </Flex>\n  );\n}\n\nexport { LoginPage };\n"]},"metadata":{},"sourceType":"module"}