{"ast":null,"code":"import _classCallCheck from \"/Users/bagus/webapproval/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport * as ReactDOM from \"react-dom\";\nimport * as React from \"react\";\nimport ToastManager from \"./ToastManager\";\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nvar PORTAL_ID = \"react-toast\";\n\nvar Toaster = function Toaster() {\n  var _this = this;\n\n  _classCallCheck(this, Toaster);\n\n  this.closeAll = function () {\n    if (_this.removeAll) {\n      _this.removeAll();\n    }\n  };\n\n  this.bindNotify = function (fn, removeAll, closeToast) {\n    _this.createNotification = fn;\n    _this.removeAll = removeAll;\n    _this.closeToast = closeToast;\n  };\n\n  this.notify = function (message) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (_this.createNotification) {\n      return _this.createNotification(message, options);\n    }\n  };\n\n  this.close = function (id, position) {\n    if (_this.closeToast) {\n      _this.closeToast(id, position);\n    }\n  };\n\n  if (!isBrowser) {\n    return;\n  }\n\n  var portalElement;\n  var existingPortalElement = document.getElementById(PORTAL_ID);\n\n  if (existingPortalElement) {\n    portalElement = existingPortalElement;\n  } else {\n    var el = document.createElement(\"div\");\n    el.id = PORTAL_ID;\n    el.className = \"Toaster\";\n\n    if (document.body != null) {\n      document.body.appendChild(el);\n    }\n\n    portalElement = el;\n  }\n\n  ReactDOM.render(React.createElement(ToastManager, {\n    notify: this.bindNotify\n  }), portalElement);\n};\n\nexport default Toaster;","map":{"version":3,"sources":["/Users/bagus/webapproval/node_modules/toasted-notes/lib/Toast.js"],"names":["ReactDOM","React","ToastManager","isBrowser","window","document","PORTAL_ID","Toaster","closeAll","removeAll","bindNotify","fn","closeToast","createNotification","notify","message","options","close","id","position","portalElement","existingPortalElement","getElementById","el","createElement","className","body","appendChild","render"],"mappings":";AAAA,OAAO,KAAKA,QAAZ,MAA0B,WAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,IAAMC,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAA9E;AACA,IAAMC,SAAS,GAAG,aAAlB;;IACMC,O,GACF,mBAAc;AAAA;;AAAA;;AACV,OAAKC,QAAL,GAAgB,YAAM;AAClB,QAAI,KAAI,CAACC,SAAT,EAAoB;AAChB,MAAA,KAAI,CAACA,SAAL;AACH;AACJ,GAJD;;AAKA,OAAKC,UAAL,GAAkB,UAACC,EAAD,EAAKF,SAAL,EAAgBG,UAAhB,EAA+B;AAC7C,IAAA,KAAI,CAACC,kBAAL,GAA0BF,EAA1B;AACA,IAAA,KAAI,CAACF,SAAL,GAAiBA,SAAjB;AACA,IAAA,KAAI,CAACG,UAAL,GAAkBA,UAAlB;AACH,GAJD;;AAKA,OAAKE,MAAL,GAAc,UAACC,OAAD,EAA2B;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;;AACrC,QAAI,KAAI,CAACH,kBAAT,EAA6B;AACzB,aAAO,KAAI,CAACA,kBAAL,CAAwBE,OAAxB,EAAiCC,OAAjC,CAAP;AACH;AACJ,GAJD;;AAKA,OAAKC,KAAL,GAAa,UAACC,EAAD,EAAKC,QAAL,EAAkB;AAC3B,QAAI,KAAI,CAACP,UAAT,EAAqB;AACjB,MAAA,KAAI,CAACA,UAAL,CAAgBM,EAAhB,EAAoBC,QAApB;AACH;AACJ,GAJD;;AAKA,MAAI,CAAChB,SAAL,EAAgB;AACZ;AACH;;AACD,MAAIiB,aAAJ;AACA,MAAMC,qBAAqB,GAAGhB,QAAQ,CAACiB,cAAT,CAAwBhB,SAAxB,CAA9B;;AACA,MAAIe,qBAAJ,EAA2B;AACvBD,IAAAA,aAAa,GAAGC,qBAAhB;AACH,GAFD,MAGK;AACD,QAAME,EAAE,GAAGlB,QAAQ,CAACmB,aAAT,CAAuB,KAAvB,CAAX;AACAD,IAAAA,EAAE,CAACL,EAAH,GAAQZ,SAAR;AACAiB,IAAAA,EAAE,CAACE,SAAH,GAAe,SAAf;;AACA,QAAIpB,QAAQ,CAACqB,IAAT,IAAiB,IAArB,EAA2B;AACvBrB,MAAAA,QAAQ,CAACqB,IAAT,CAAcC,WAAd,CAA0BJ,EAA1B;AACH;;AACDH,IAAAA,aAAa,GAAGG,EAAhB;AACH;;AACDvB,EAAAA,QAAQ,CAAC4B,MAAT,CAAgB3B,KAAK,CAACuB,aAAN,CAAoBtB,YAApB,EAAkC;AAAEY,IAAAA,MAAM,EAAE,KAAKJ;AAAf,GAAlC,CAAhB,EAAgFU,aAAhF;AACH,C;;AAEL,eAAeb,OAAf","sourcesContent":["import * as ReactDOM from \"react-dom\";\nimport * as React from \"react\";\nimport ToastManager from \"./ToastManager\";\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst PORTAL_ID = \"react-toast\";\nclass Toaster {\n    constructor() {\n        this.closeAll = () => {\n            if (this.removeAll) {\n                this.removeAll();\n            }\n        };\n        this.bindNotify = (fn, removeAll, closeToast) => {\n            this.createNotification = fn;\n            this.removeAll = removeAll;\n            this.closeToast = closeToast;\n        };\n        this.notify = (message, options = {}) => {\n            if (this.createNotification) {\n                return this.createNotification(message, options);\n            }\n        };\n        this.close = (id, position) => {\n            if (this.closeToast) {\n                this.closeToast(id, position);\n            }\n        };\n        if (!isBrowser) {\n            return;\n        }\n        let portalElement;\n        const existingPortalElement = document.getElementById(PORTAL_ID);\n        if (existingPortalElement) {\n            portalElement = existingPortalElement;\n        }\n        else {\n            const el = document.createElement(\"div\");\n            el.id = PORTAL_ID;\n            el.className = \"Toaster\";\n            if (document.body != null) {\n                document.body.appendChild(el);\n            }\n            portalElement = el;\n        }\n        ReactDOM.render(React.createElement(ToastManager, { notify: this.bindNotify }), portalElement);\n    }\n}\nexport default Toaster;\n"]},"metadata":{},"sourceType":"module"}