{"ast":null,"code":"import axios from\"axios\";/*\n  Base client config for your application.\n  Here you can define your base url, headers,\n  timeouts and middleware used for each request.\n*/var client=axios.create({baseURL:\"http://35.198.219.220:2121/pakuwonAPI/\",// baseURL: \"http://35.198.219.220:2121/vasantaAPI\",\ntimeout:10000,headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"}});client.interceptors.response.use(function(response){return!response.data.Error?response.data:Promise.reject(response.data.Pesan);},function(error){return Promise.reject(error);});// const client = axios.create({\n//   baseURL: API_URL,\n//   timeout: 100000,\n//   headers: {\n//     Accept: \"application/json\",\n//     \"Content-Type\": \"application/json\"\n//   },\n// });\n// // Custom middleware for requests (this one just logs the error).\n// client.interceptors.request.use(config => config, (error) => {\n//   console.log('Failed to make request with error:');\n//   console.log(error);\n//   return Promise.reject(error);\n// });\n// // Custom middleware for responses (this one just logs the error).\n// client.interceptors.response.use(response => response, (error) => {\n//   console.log('Request got response with error:');\n//   console.log(error);\n//   return Promise.reject(error);\n// });\nexport default client;","map":{"version":3,"sources":["/Users/bagus/webapproval/src/data/httpClient.js"],"names":["axios","client","create","baseURL","timeout","headers","Accept","interceptors","response","use","data","Error","Promise","reject","Pesan","error"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA;AACA;AACA;AACA,EACA,GAAMC,CAAAA,MAAM,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC1BC,OAAO,CAAE,wCADiB,CAE5B;AAEEC,OAAO,CAAE,KAJiB,CAK1BC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CALiB,CAAb,CAAf,CAWAL,MAAM,CAACM,YAAP,CAAoBC,QAApB,CAA6BC,GAA7B,CACE,SAAAD,QAAQ,CAAI,CACV,MAAO,CAACA,QAAQ,CAACE,IAAT,CAAcC,KAAf,CACHH,QAAQ,CAACE,IADN,CAEHE,OAAO,CAACC,MAAR,CAAeL,QAAQ,CAACE,IAAT,CAAcI,KAA7B,CAFJ,CAGD,CALH,CAME,SAAAC,KAAK,CAAI,CACP,MAAOH,CAAAA,OAAO,CAACC,MAAR,CAAeE,KAAf,CAAP,CACD,CARH,EAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAed,CAAAA,MAAf","sourcesContent":["import axios from \"axios\";\n\n/*\n  Base client config for your application.\n  Here you can define your base url, headers,\n  timeouts and middleware used for each request.\n*/\nconst client = axios.create({\n  baseURL: \"http://35.198.219.220:2121/pakuwonAPI/\",\n// baseURL: \"http://35.198.219.220:2121/vasantaAPI\",\n\n  timeout: 10000,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nclient.interceptors.response.use(\n  response => {\n    return !response.data.Error\n      ? response.data\n      : Promise.reject(response.data.Pesan);\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// const client = axios.create({\n//   baseURL: API_URL,\n//   timeout: 100000,\n//   headers: {\n//     Accept: \"application/json\",\n//     \"Content-Type\": \"application/json\"\n//   },\n// });\n\n// // Custom middleware for requests (this one just logs the error).\n// client.interceptors.request.use(config => config, (error) => {\n//   console.log('Failed to make request with error:');\n//   console.log(error);\n//   return Promise.reject(error);\n// });\n\n// // Custom middleware for responses (this one just logs the error).\n// client.interceptors.response.use(response => response, (error) => {\n//   console.log('Request got response with error:');\n//   console.log(error);\n//   return Promise.reject(error);\n// });\n\nexport default client;\n"]},"metadata":{},"sourceType":"module"}