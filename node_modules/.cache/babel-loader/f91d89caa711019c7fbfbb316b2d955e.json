{"ast":null,"code":"import { userConstants } from \"../constants\";\nimport { userService } from \"../services\";\nimport UserControl from \"../data/userControl\";\nimport { alertActions } from \"./\";\nimport { history } from \"../helpers\";\nexport const login = (email, password) => async dispatch => {\n  dispatch(request());\n\n  try {\n    const user = await UserController.login(email, password);\n    dispatch(success(user.Data));\n    console.log(user);\n    history.push(\"/\"); // alert(\"JSON.stringify(user)\");\n  } catch (error) {\n    alert(error);\n    dispatch(failure(error));\n  } // return (dispatch) => {\n  //   dispatch(request());\n  //   userService.loginUser(email, password).then(\n  //     (user) => {\n  //       dispatch(success(user));\n  //       console.log(user);\n  //       history.push(\"/\");\n  //     },\n  //     (error) => {\n  //       dispatch(failure(error));\n  //       dispatch(alertActions.error(error));\n  //     }\n  //   );\n  // };\n\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n};\n\nfunction logout() {\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction getEmp(userId) {\n  return dispatch => {\n    dispatch(request(userId));\n    userService.getEmp(userId).then(empList => dispatch(success(empList)), error => dispatch(failure(error)));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETEMP_REQUEST\n    };\n  }\n\n  function success(empList) {\n    return {\n      type: userConstants.GETEMP_SUCCESS,\n      empList\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETEMP_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/bagus/Appiness_APP/src/actions/user.actions.js"],"names":["userConstants","userService","UserControl","alertActions","history","login","email","password","dispatch","request","user","UserController","success","Data","console","log","push","error","alert","failure","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","logout","LOGOUT","getEmp","userId","then","empList","GETEMP_REQUEST","GETEMP_SUCCESS","GETEMP_FAILURE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,YAAT,QAA6B,IAA7B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAIA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAiB;AACzDA,EAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;;AACA,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMC,cAAc,CAACN,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,CAAnB;AACAC,IAAAA,QAAQ,CAACI,OAAO,CAACF,IAAI,CAACG,IAAN,CAAR,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAN,IAAAA,OAAO,CAACY,IAAR,CAAa,GAAb,EAJE,CAMF;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACAT,IAAAA,QAAQ,CAACW,OAAO,CAACF,KAAD,CAAR,CAAR;AACD,GAZwD,CAezD;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASR,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,WAAO;AAAEU,MAAAA,IAAI,EAAEpB,aAAa,CAACqB,aAAtB;AAAqCX,MAAAA;AAArC,KAAP;AACD;;AACD,WAASE,OAAT,CAAiBF,IAAjB,EAAuB;AACrB,WAAO;AAAEU,MAAAA,IAAI,EAAEpB,aAAa,CAACsB,aAAtB;AAAqCZ,MAAAA;AAArC,KAAP;AACD;;AACD,WAASS,OAAT,CAAiBF,KAAjB,EAAwB;AACtB,WAAO;AAAEG,MAAAA,IAAI,EAAEpB,aAAa,CAACuB,aAAtB;AAAqCN,MAAAA;AAArC,KAAP;AACD;AACF,CAzCM;;AA2CP,SAASO,MAAT,GAAkB;AAChB,SAAO;AAAEJ,IAAAA,IAAI,EAAEpB,aAAa,CAACyB;AAAtB,GAAP;AACD;;AAED,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,SAAQnB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,OAAO,CAACkB,MAAD,CAAR,CAAR;AAEA1B,IAAAA,WAAW,CAACyB,MAAZ,CAAmBC,MAAnB,EAA2BC,IAA3B,CACGC,OAAD,IAAarB,QAAQ,CAACI,OAAO,CAACiB,OAAD,CAAR,CADvB,EAEGZ,KAAD,IAAWT,QAAQ,CAACW,OAAO,CAACF,KAAD,CAAR,CAFrB;AAID,GAPD;;AASA,WAASR,OAAT,GAAmB;AACjB,WAAO;AAAEW,MAAAA,IAAI,EAAEpB,aAAa,CAAC8B;AAAtB,KAAP;AACD;;AACD,WAASlB,OAAT,CAAiBiB,OAAjB,EAA0B;AACxB,WAAO;AAAET,MAAAA,IAAI,EAAEpB,aAAa,CAAC+B,cAAtB;AAAsCF,MAAAA;AAAtC,KAAP;AACD;;AACD,WAASV,OAAT,CAAiBF,KAAjB,EAAwB;AACtB,WAAO;AAAEG,MAAAA,IAAI,EAAEpB,aAAa,CAACgC,cAAtB;AAAsCf,MAAAA;AAAtC,KAAP;AACD;AACF","sourcesContent":["import { userConstants } from \"../constants\";\nimport { userService } from \"../services\";\nimport UserControl from \"../data/userControl\"\nimport { alertActions } from \"./\";\nimport { history } from \"../helpers\";\n\n\n\nexport const login = (email, password) => async dispatch =>{ \n  dispatch(request());\n  try {\n    const user = await UserController.login(email, password);\n    dispatch(success(user.Data));\n    console.log(user);\n    history.push(\"/\");\n\n    // alert(\"JSON.stringify(user)\");\n  } catch (error) {\n    alert(error);\n    dispatch(failure(error));\n  }\n\n\n  // return (dispatch) => {\n  //   dispatch(request());\n\n  //   userService.loginUser(email, password).then(\n  //     (user) => {\n  //       dispatch(success(user));\n  //       console.log(user);\n\n  //       history.push(\"/\");\n  //     },\n  //     (error) => {\n  //       dispatch(failure(error));\n  //       dispatch(alertActions.error(error));\n  //     }\n  //   );\n  // };\n\n  function request(user) {\n    return { type: userConstants.LOGIN_REQUEST, user };\n  }\n  function success(user) {\n    return { type: userConstants.LOGIN_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: userConstants.LOGIN_FAILURE, error };\n  }\n}\n\nfunction logout() {\n  return { type: userConstants.LOGOUT };\n}\n\nfunction getEmp(userId) {\n  return (dispatch) => {\n    dispatch(request(userId));\n\n    userService.getEmp(userId).then(\n      (empList) => dispatch(success(empList)),\n      (error) => dispatch(failure(error))\n    );\n  };\n\n  function request() {\n    return { type: userConstants.GETEMP_REQUEST };\n  }\n  function success(empList) {\n    return { type: userConstants.GETEMP_SUCCESS, empList };\n  }\n  function failure(error) {\n    return { type: userConstants.GETEMP_FAILURE, error };\n  }\n}"]},"metadata":{},"sourceType":"module"}