{"ast":null,"code":"import { login } from \"../data/userControl\";\nimport EmpData from \"../data/DashBoardPage.json\";\nimport httpClient from \"../data/httpClient\";\nexport const userService = {\n  loginUser,\n  getEmp\n};\n\nconst loginUser = async (email, password) => {\n  try {\n    const result = await httpClient.request({\n      url: `c_auth/login`,\n      method: \"POST\",\n      data: {\n        email,\n        password,\n        token: \"\",\n        token_firebase: \"token test\",\n        device: \"ios\",\n        mac: \"mac test\",\n        app: \"A\"\n      }\n    }); // alert(result.Pesan);\n\n    if (result.Error) {\n      return Promise.reject(result.Pesan);\n    } else {\n      return result;\n    }\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nfunction getEmp(user) {\n  if (user.email === LoginData.email && user.password === LoginData.password) {\n    return Promise.resolve(EmpData.user);\n  } else {\n    return Promise.reject(\"No Data Found\");\n  }\n}","map":{"version":3,"sources":["/Users/bagus/Appiness_APP/src/services/user.service.js"],"names":["login","EmpData","httpClient","userService","loginUser","getEmp","email","password","result","request","url","method","data","token","token_firebase","device","mac","app","Error","Promise","reject","Pesan","error","user","LoginData","resolve"],"mappings":"AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAGA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,SADyB;AAEzBC,EAAAA;AAFyB,CAApB;;AAKP,MAAMD,SAAS,GAAG,OAAOE,KAAP,EAAcC,QAAd,KAA2B;AAC3C,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMN,UAAU,CAACO,OAAX,CAAmB;AACtCC,MAAAA,GAAG,EAAG,cADgC;AAEtCC,MAAAA,MAAM,EAAE,MAF8B;AAGtCC,MAAAA,IAAI,EAAE;AACJN,QAAAA,KADI;AAEJC,QAAAA,QAFI;AAGJM,QAAAA,KAAK,EAAE,EAHH;AAIJC,QAAAA,cAAc,EAAE,YAJZ;AAKJC,QAAAA,MAAM,EAAE,KALJ;AAMJC,QAAAA,GAAG,EAAE,UAND;AAOJC,QAAAA,GAAG,EAAE;AAPD;AAHgC,KAAnB,CAArB,CADE,CAeF;;AAEA,QAAIT,MAAM,CAACU,KAAX,EAAkB;AAChB,aAAOC,OAAO,CAACC,MAAR,CAAeZ,MAAM,CAACa,KAAtB,CAAP;AACD,KAFD,MAEO;AACL,aAAOb,MAAP;AACD;AACF,GAtBD,CAsBE,OAAOc,KAAP,EAAc;AACd,WAAOH,OAAO,CAACC,MAAR,CAAeE,KAAf,CAAP;AACD;AACF,CA1BD;;AA4BA,SAASjB,MAAT,CAAgBkB,IAAhB,EAAsB;AACpB,MACEA,IAAI,CAACjB,KAAL,KAAekB,SAAS,CAAClB,KAAzB,IACAiB,IAAI,CAAChB,QAAL,KAAkBiB,SAAS,CAACjB,QAF9B,EAGE;AACA,WAAOY,OAAO,CAACM,OAAR,CAAgBxB,OAAO,CAACsB,IAAxB,CAAP;AACD,GALD,MAKO;AACL,WAAOJ,OAAO,CAACC,MAAR,CAAe,eAAf,CAAP;AACD;AACF","sourcesContent":["import { login } from \"../data/userControl\";\nimport EmpData from \"../data/DashBoardPage.json\";\nimport httpClient from \"../data/httpClient\"\n\n\nexport const userService = {\n  loginUser,\n  getEmp,\n};\n\nconst loginUser = async (email, password) => {\n  try {\n    const result = await httpClient.request({\n      url: `c_auth/login`,\n      method: \"POST\",\n      data: {\n        email,\n        password,\n        token: \"\",\n        token_firebase: \"token test\",\n        device: \"ios\",\n        mac: \"mac test\",\n        app: \"A\"\n      }\n    });\n\n    // alert(result.Pesan);\n\n    if (result.Error) {\n      return Promise.reject(result.Pesan);\n    } else {\n      return result;\n    }\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nfunction getEmp(user) {\n  if (\n    user.email === LoginData.email &&\n    user.password === LoginData.password\n  ) {\n    return Promise.resolve(EmpData.user);\n  } else {\n    return Promise.reject(\"No Data Found\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}