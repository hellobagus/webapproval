{"ast":null,"code":"import { userConstants } from \"../constants\";\nimport { userService } from \"../services\";\nimport UserControl from \"../data/userControl\";\nimport { alertActions } from \"./\";\nimport { history } from \"../helpers\";\nexport const userActions = {\n  login,\n  logout,\n  getEmp\n};\n\nfunction login(email, password) {\n  return dispatch => {\n    dispatch(request());\n    userService.loginUser(email, password).then(user => {\n      dispatch(success(user.Data));\n      console.log(user);\n      history.push(\"/\");\n    }, error => {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction getEmp(user) {\n  return dispatch => {\n    dispatch(request());\n    userService.getEmp(user).then(empList => dispatch(success(empList)), error => dispatch(failure(error)));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETEMP_REQUEST\n    };\n  }\n\n  function success(empList) {\n    return {\n      type: userConstants.GETEMP_SUCCESS,\n      empList\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETEMP_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/bagus/Appiness_APP/src/actions/user.actions.js"],"names":["userConstants","userService","UserControl","alertActions","history","userActions","login","logout","getEmp","email","password","dispatch","request","loginUser","then","user","success","Data","console","log","push","error","failure","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","empList","GETEMP_REQUEST","GETEMP_SUCCESS","GETEMP_FAILURE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,YAAT,QAA6B,IAA7B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,KADyB;AAEzBC,EAAAA,MAFyB;AAGzBC,EAAAA;AAHyB,CAApB;;AAMP,SAASF,KAAT,CAAeG,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEAX,IAAAA,WAAW,CAACY,SAAZ,CAAsBJ,KAAtB,EAA6BC,QAA7B,EAAuCI,IAAvC,CACGC,IAAD,IAAU;AACRJ,MAAAA,QAAQ,CAACK,OAAO,CAACD,IAAI,CAACE,IAAN,CAAR,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEAX,MAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACD,KANH,EAOGC,KAAD,IAAW;AACTV,MAAAA,QAAQ,CAACW,OAAO,CAACD,KAAD,CAAR,CAAR;AACAV,MAAAA,QAAQ,CAACR,YAAY,CAACkB,KAAb,CAAmBA,KAAnB,CAAD,CAAR;AACD,KAVH;AAYD,GAfD;;AAiBA,WAAST,OAAT,CAAiBG,IAAjB,EAAuB;AACrB,WAAO;AAAEQ,MAAAA,IAAI,EAAEvB,aAAa,CAACwB,aAAtB;AAAqCT,MAAAA;AAArC,KAAP;AACD;;AACD,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AACrB,WAAO;AAAEQ,MAAAA,IAAI,EAAEvB,aAAa,CAACyB,aAAtB;AAAqCV,MAAAA;AAArC,KAAP;AACD;;AACD,WAASO,OAAT,CAAiBD,KAAjB,EAAwB;AACtB,WAAO;AAAEE,MAAAA,IAAI,EAAEvB,aAAa,CAAC0B,aAAtB;AAAqCL,MAAAA;AAArC,KAAP;AACD;AACF;;AAED,SAASd,MAAT,GAAkB;AAChB,SAAO;AAAEgB,IAAAA,IAAI,EAAEvB,aAAa,CAAC2B;AAAtB,GAAP;AACD;;AAED,SAASnB,MAAT,CAAgBO,IAAhB,EAAsB;AACpB,SAAQJ,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;AAEAX,IAAAA,WAAW,CAACO,MAAZ,CAAmBO,IAAnB,EAAyBD,IAAzB,CACGc,OAAD,IAAajB,QAAQ,CAACK,OAAO,CAACY,OAAD,CAAR,CADvB,EAEGP,KAAD,IAAWV,QAAQ,CAACW,OAAO,CAACD,KAAD,CAAR,CAFrB;AAID,GAPD;;AASA,WAAST,OAAT,GAAmB;AACjB,WAAO;AAAEW,MAAAA,IAAI,EAAEvB,aAAa,CAAC6B;AAAtB,KAAP;AACD;;AACD,WAASb,OAAT,CAAiBY,OAAjB,EAA0B;AACxB,WAAO;AAAEL,MAAAA,IAAI,EAAEvB,aAAa,CAAC8B,cAAtB;AAAsCF,MAAAA;AAAtC,KAAP;AACD;;AACD,WAASN,OAAT,CAAiBD,KAAjB,EAAwB;AACtB,WAAO;AAAEE,MAAAA,IAAI,EAAEvB,aAAa,CAAC+B,cAAtB;AAAsCV,MAAAA;AAAtC,KAAP;AACD;AACF","sourcesContent":["import { userConstants } from \"../constants\";\nimport { userService } from \"../services\";\nimport UserControl from \"../data/userControl\"\nimport { alertActions } from \"./\";\nimport { history } from \"../helpers\";\n\nexport const userActions = {\n  login,\n  logout,\n  getEmp,\n};\n\nfunction login(email, password) {\n  return (dispatch) => {\n    dispatch(request());\n\n    userService.loginUser(email, password).then(\n      (user) => {\n        dispatch(success(user.Data));\n        console.log(user);\n\n        history.push(\"/\");\n      },\n      (error) => {\n        dispatch(failure(error));\n        dispatch(alertActions.error(error));\n      }\n    );\n  };\n\n  function request(user) {\n    return { type: userConstants.LOGIN_REQUEST, user };\n  }\n  function success(user) {\n    return { type: userConstants.LOGIN_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: userConstants.LOGIN_FAILURE, error };\n  }\n}\n\nfunction logout() {\n  return { type: userConstants.LOGOUT };\n}\n\nfunction getEmp(user) {\n  return (dispatch) => {\n    dispatch(request());\n\n    userService.getEmp(user).then(\n      (empList) => dispatch(success(empList)),\n      (error) => dispatch(failure(error))\n    );\n  };\n\n  function request() {\n    return { type: userConstants.GETEMP_REQUEST };\n  }\n  function success(empList) {\n    return { type: userConstants.GETEMP_SUCCESS, empList };\n  }\n  function failure(error) {\n    return { type: userConstants.GETEMP_FAILURE, error };\n  }\n}"]},"metadata":{},"sourceType":"module"}