{"ast":null,"code":"import axios from \"axios\";\nimport httpClient from \"./httpClient\";\nexport const login = async (email, password) => {\n  try {\n    const result = await httpClient.request({\n      url: `/c_auth/login`,\n      method: \"POST\",\n      data: {\n        email,\n        password,\n        token: \"\",\n        token_firebase: \"token test\",\n        device: \"ios\",\n        mac: \"mac test\",\n        app: \"A\"\n      }\n    }); // alert(result.Pesan);\n\n    console.log(\"data\", result);\n\n    if (result.Error) {\n      return Promise.reject(result.Pesan);\n    } else {\n      return result;\n    }\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const resetPassword = async (conPass, newPass, email) => {\n  try {\n    const result = await httpClient.request({\n      url: `/c_auth/resetpass_newlogin`,\n      method: \"POST\",\n      data: {\n        conpass: conPass,\n        newpass: newPass,\n        email: email\n      }\n    });\n    return result;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const changePassword = async (email, pass, conpass) => {\n  try {\n    const result = await httpClient.request({\n      url: `/c_profile/changePassReact`,\n      method: \"POST\",\n      data: {\n        email: email,\n        password: pass,\n        cpassword: conpass\n      }\n    });\n    return result;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const saveProfile = async data => {\n  try {\n    const result = await httpClient.request({\n      url: `/c_profile/save`,\n      method: \"POST\",\n      data: {\n        UserName: data.email,\n        Name: data.name,\n        Handphone: data.phone,\n        Gender: data.gender,\n        wherename: data.name\n      }\n    });\n    return result;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const logout = () => null;","map":{"version":3,"sources":["/Users/bagus/webapproval/src/data/userControl.js"],"names":["axios","httpClient","login","email","password","result","request","url","method","data","token","token_firebase","device","mac","app","console","log","Error","Promise","reject","Pesan","error","resetPassword","conPass","newPass","conpass","newpass","changePassword","pass","cpassword","saveProfile","UserName","Name","name","Handphone","phone","Gender","gender","wherename","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport httpClient from \"./httpClient\";\n\n\n\nexport const login = async (email, password) => {\n    try {\n      const result = await httpClient.request({\n        url: `/c_auth/login`,\n        method: \"POST\",\n        data: {\n          email,\n          password,\n          token: \"\",\n          token_firebase: \"token test\",\n          device: \"ios\",\n          mac: \"mac test\",\n          app: \"A\"\n        }\n\n      });\n      // alert(result.Pesan);\n      console.log(\"data\", result)\n\n      if (result.Error) {\n        return Promise.reject(result.Pesan);\n      } else {\n        return result;\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n  export const  resetPassword = async (conPass, newPass, email) => {\n    try {\n      const result = await httpClient.request({\n        url: `/c_auth/resetpass_newlogin`,\n\n        method: \"POST\",\n        data: {\n          conpass: conPass,\n          newpass: newPass,\n          email: email\n        }\n      });\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  export const  changePassword = async (email, pass, conpass) => {\n    try {\n      const result = await httpClient.request({\n        url: `/c_profile/changePassReact`,\n        method: \"POST\",\n        data: {\n          email: email,\n          password: pass,\n          cpassword: conpass\n        }\n      });\n\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  export const  saveProfile = async data => {\n    try {\n      const result = await httpClient.request({\n        url: `/c_profile/save`,\n        method: \"POST\",\n        data: {\n          UserName: data.email,\n          Name: data.name,\n          Handphone: data.phone,\n          Gender: data.gender,\n          wherename: data.name\n        }\n      });\n\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  export const  logout = () => null;\n\n\n"]},"metadata":{},"sourceType":"module"}