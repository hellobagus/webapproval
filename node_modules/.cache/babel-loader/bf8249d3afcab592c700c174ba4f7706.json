{"ast":null,"code":"import { userConstants } from \"../constants\";\nimport { userService, menuService } from \"../services\";\nimport { history } from \"../helpers\";\nexport const login = (email, password) => async dispatch => {\n  dispatch(request());\n\n  try {\n    const user = await userService.loginUser(email, password);\n    dispatch(success(user.Data));\n    console.log(user);\n    history.push(\"/home\"); // alert(\"JSON.stringify(user)\");\n  } catch (error) {\n    alert(error);\n    dispatch(failure(error));\n  }\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n};\n\nfunction logout() {\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nexport const getEmps = userId => async dispatch => {\n  dispatch(request());\n\n  try {\n    const empList = await userService.getEmp(userId);\n    dispatch(success(empList.Data));\n    console.log(empList);\n  } catch (error) {\n    dispatch(failure(error));\n  }\n\n  function request() {\n    return {\n      type: userConstants.GETEMP_REQUEST\n    };\n  }\n\n  function success(empList) {\n    return {\n      type: userConstants.GETEMP_SUCCESS,\n      empList\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETEMP_FAILURE,\n      error\n    };\n  }\n};\nexport const getApproval = (userId, entity_cd) => async dispatch => {\n  dispatch(request());\n\n  try {\n    const menuApprove = await menuService.getMenu(userId, entity_cd);\n    dispatch(success(menuApprove.Data));\n    console.log(menuApprove);\n  } catch (error) {\n    dispatch(failure(error));\n  }\n\n  function request() {\n    return {\n      type: userConstants.APPROVEMENU_REQUEST\n    };\n  }\n\n  function success(menuApprove) {\n    return {\n      type: userConstants.APPROVEMENU_SUCCESS,\n      menuApprove\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.APPROVEMENU_FAILURE,\n      error\n    };\n  }\n};\nexport const getDetail = (approval_user, approval_id, entity_cd) => async dispatch => {\n  dispatch(request());\n\n  try {\n    const detail = await menuService.getDetail(approval_user, approval_id, entity_cd);\n    dispatch(success(detail.Data));\n    console.log(detail);\n  } catch (error) {\n    dispatch(failure(error));\n  }\n\n  function request() {\n    return {\n      type: userConstants.DETAIL_REQUEST\n    };\n  }\n\n  function success(detail) {\n    return {\n      type: userConstants.DETAIL_SUCCESS,\n      detail\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.DETAIL_FAILURE,\n      error\n    };\n  }\n};\nexport const getViewDetail = (entity_cd, doc_no, approval_user, approval_id) => async dispatch => {\n  dispatch(request());\n\n  try {\n    const viewdetail = await menuService.getViewDetail(entity_cd, doc_no, approval_user, approval_id);\n    dispatch(success(viewdetail.Data));\n    console.log(viewdetail);\n  } catch (error) {\n    dispatch(failure(error));\n  }\n\n  function request() {\n    return {\n      type: userConstants.VIEWDETAIL_REQUEST\n    };\n  }\n\n  function success(viewdetail) {\n    return {\n      type: userConstants.VIEWDETAIL_SUCCESS,\n      viewdetail\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.VIEWDETAIL_FAILURE,\n      error\n    };\n  }\n};\nexport const approve = (status, data, requestm, UserId, approval_id, trx_type, approve_seq, level_no) => async dispatch => {\n  dispatch(request());\n\n  try {\n    const approved = await menuService.setApprove(status, data, requestm, UserId, approval_id, trx_type, approve_seq, level_no);\n    dispatch(success(approved.Data));\n    console.log(approved);\n  } catch (error) {\n    dispatch(failure(error));\n  }\n\n  function request() {\n    return {\n      type: userConstants.APPROVE_REQUEST\n    };\n  }\n\n  function success(approved) {\n    return {\n      type: userConstants.APPROVE_SUCCESS,\n      approved\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.APPROVE_FAILURE,\n      error\n    };\n  }\n};","map":{"version":3,"sources":["/Users/bagus/Appiness_APP/src/actions/user.actions.js"],"names":["userConstants","userService","menuService","history","login","email","password","dispatch","request","user","loginUser","success","Data","console","log","push","error","alert","failure","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","logout","LOGOUT","getEmps","userId","empList","getEmp","GETEMP_REQUEST","GETEMP_SUCCESS","GETEMP_FAILURE","getApproval","entity_cd","menuApprove","getMenu","APPROVEMENU_REQUEST","APPROVEMENU_SUCCESS","APPROVEMENU_FAILURE","getDetail","approval_user","approval_id","detail","DETAIL_REQUEST","DETAIL_SUCCESS","DETAIL_FAILURE","getViewDetail","doc_no","viewdetail","VIEWDETAIL_REQUEST","VIEWDETAIL_SUCCESS","VIEWDETAIL_FAILURE","approve","status","data","requestm","UserId","trx_type","approve_seq","level_no","approved","setApprove","APPROVE_REQUEST","APPROVE_SUCCESS","APPROVE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from \"../constants\";\nimport { userService, menuService } from \"../services\";\nimport { history } from \"../helpers\";\n\n\n\nexport const login = (email, password) => async dispatch =>{ \n  dispatch(request());\n  try {\n    const user = await userService.loginUser(email, password);\n    dispatch(success(user.Data));\n    console.log(user);\n    history.push(\"/home\");\n\n    // alert(\"JSON.stringify(user)\");\n  } catch (error) {\n    alert(error);\n    dispatch(failure(error));\n  }\n\n\n  function request(user) {\n    return { type: userConstants.LOGIN_REQUEST, user };\n  }\n  function success(user) {\n    return { type: userConstants.LOGIN_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: userConstants.LOGIN_FAILURE, error };\n  }\n}\n\nfunction logout() {\n  return { type: userConstants.LOGOUT };\n}\n\nexport const getEmps = (userId) => async (dispatch) => {\n\n  dispatch(request());\n  try {\n    const empList = await userService.getEmp(userId);\n    dispatch(success(empList.Data))\nconsole.log(empList)\n    } catch (error) {\n      dispatch(failure(error))\n\n    }\n  function request() {\n    return { type: userConstants.GETEMP_REQUEST };\n  }\n  function success(empList) {\n    return { type: userConstants.GETEMP_SUCCESS, empList };\n  }\n  function failure(error) {\n    return { type: userConstants.GETEMP_FAILURE, error };\n  }\n}\n\n\nexport const getApproval = (userId, entity_cd) => async (dispatch) => {\n\n  dispatch(request());\n  try {\n    const menuApprove = await menuService.getMenu(userId, entity_cd);\n    dispatch(success(menuApprove.Data))\nconsole.log(menuApprove)\n    } catch (error) {\n      dispatch(failure(error))\n\n    }\n  function request() {\n    return { type: userConstants.APPROVEMENU_REQUEST };\n  }\n  function success(menuApprove) {\n    return { type: userConstants.APPROVEMENU_SUCCESS, menuApprove };\n  }\n  function failure(error) {\n    return { type: userConstants.APPROVEMENU_FAILURE, error };\n  }\n}\n\nexport const getDetail = (approval_user, approval_id, entity_cd) => async (dispatch) => {\n\n  dispatch(request());\n  try {\n    const detail = await menuService.getDetail(approval_user, approval_id, entity_cd);\n    dispatch(success(detail.Data))\nconsole.log(detail)\n    } catch (error) {\n      dispatch(failure(error))\n\n    }\n  function request() {\n    return { type: userConstants.DETAIL_REQUEST };\n  }\n  function success(detail) {\n    return { type: userConstants.DETAIL_SUCCESS, detail };\n  }\n  function failure(error) {\n    return { type: userConstants.DETAIL_FAILURE, error };\n  }\n}\n\nexport const getViewDetail = (entity_cd, doc_no, approval_user, approval_id) => async (dispatch) => {\n\n  dispatch(request());\n  try {\n    const viewdetail = await menuService.getViewDetail(entity_cd, doc_no, approval_user, approval_id)\n    dispatch(success(viewdetail.Data))\nconsole.log(viewdetail)\n    } catch (error) {\n      dispatch(failure(error))\n\n    }\n  function request() {\n    return { type: userConstants.VIEWDETAIL_REQUEST };\n  }\n  function success(viewdetail) {\n    return { type: userConstants.VIEWDETAIL_SUCCESS, viewdetail };\n  }\n  function failure(error) {\n    return { type: userConstants.VIEWDETAIL_FAILURE, error };\n  }\n}\n\nexport const approve = (\n  status,\n  data,\n  requestm,\n  UserId,\n  approval_id,\n  trx_type,\n  approve_seq,\n  level_no) => async (dispatch) => {\n\n  dispatch(request());\n  try {\n    const approved = await menuService.setApprove(status,\n      data,\n      requestm,\n      UserId,\n      approval_id,\n      trx_type,\n      approve_seq,\n      level_no)\n    dispatch(success(approved.Data))\nconsole.log(approved)\n    } catch (error) {\n      dispatch(failure(error))\n\n    }\n  function request() {\n    return { type: userConstants.APPROVE_REQUEST };\n  }\n  function success(approved) {\n    return { type: userConstants.APPROVE_SUCCESS, approved };\n  }\n  function failure(error) {\n    return { type: userConstants.APPROVE_FAILURE, error };\n  }\n}"]},"metadata":{},"sourceType":"module"}