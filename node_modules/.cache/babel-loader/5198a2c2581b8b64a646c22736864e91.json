{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bagus/Appiness_APP/src/LoginPage/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../actions\";\nimport \"./LoginPage.css\";\n\nfunction LoginPage() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const {\n    email,\n    password\n  } = inputs;\n  const loggingIn = useSelector(state => state.authentication.loggingIn);\n  const alert = useSelector(state => state.alert);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(userActions.logout());\n  }, []);\n\n  function handleChange(e) {\n    const {\n      email,\n      value\n    } = e.target;\n    setInputs(inputs => ({ ...inputs,\n      [email]: value\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSubmitted(true);\n\n    if (email && password) {\n      dispatch(userActions.login(username, password));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-8 offset-lg-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"form\",\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [alert.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert ${alert.type}`,\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"username\",\n          value: email,\n          onChange: handleChange,\n          className: \"form-control\" + (submitted && !email ? \" is-invalid\" : \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), submitted && !username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: \"Username is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange,\n          className: \"form-control\" + (submitted && !password ? \" is-invalid\" : \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), submitted && !password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: \"Password is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: [loggingIn && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-border spinner-border-sm mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), \"Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"z5uxZaZXiHgo/LMv4dUw8noIgdw=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = LoginPage;\nexport { LoginPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/bagus/Appiness_APP/src/LoginPage/LoginPage.js"],"names":["React","useState","useEffect","useDispatch","useSelector","userActions","LoginPage","inputs","setInputs","email","password","submitted","setSubmitted","loggingIn","state","authentication","alert","dispatch","logout","handleChange","e","value","target","handleSubmit","preventDefault","login","username","message","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { userActions } from \"../actions\";\nimport \"./LoginPage.css\";\n\nfunction LoginPage() {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const { email, password } = inputs;\n  const loggingIn = useSelector((state) => state.authentication.loggingIn);\n  const alert = useSelector((state) => state.alert);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(userActions.logout());\n  }, []);\n\n  function handleChange(e) {\n    const { email, value } = e.target;\n    setInputs((inputs) => ({ ...inputs, [email]: value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setSubmitted(true);\n    if (email && password) {\n      dispatch(userActions.login(username, password));\n    }\n  }\n\n  return (\n    <div className=\"col-lg-8 offset-lg-2\">\n      <h2>Login</h2>\n      <form name=\"form\" className=\"form\" onSubmit={handleSubmit}>\n        {alert.message && (\n          <div className={`alert ${alert.type}`}>{alert.message}</div>\n        )}\n        <div className=\"form-group\">\n          <label>Username</label>\n          <input\n            type=\"email\"\n            name=\"username\"\n            value={email}\n            onChange={handleChange}\n            className={\n              \"form-control\" + (submitted && !email ? \" is-invalid\" : \"\")\n            }\n          />\n          {submitted && !username && (\n            <div className=\"invalid-feedback\">Username is required</div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            className={\n              \"form-control\" + (submitted && !password ? \" is-invalid\" : \"\")\n            }\n          />\n          {submitted && !password && (\n            <div className=\"invalid-feedback\">Password is required</div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary\">\n            {loggingIn && (\n              <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n            )}\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport { LoginPage };\n"]},"metadata":{},"sourceType":"module"}