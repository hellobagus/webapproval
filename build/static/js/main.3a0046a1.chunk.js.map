{"version":3,"sources":["serviceWorker.js","helpers/history.js","constants/alert.constants.js","constants/user.constants.js","reducers/authentication.reducer.js","reducers/index.js","reducers/users.reducer.js","reducers/alert.reducer.js","helpers/store.js","theme/ThemeToggler.js","actions/alert.actions.js","data/httpClient.js","services/user.service.js","services/menu.service.js","actions/user.actions.js","components/PrivateRoute.js","HomePage/HomePage.js","LoginPage/LoginPage.js","ApprovalPage/ApprovalPage.js","Detail/DetailPage.js","components/numFormat.js","viewDetail/ViewDetail.js","App/App.js","index.js"],"names":["Boolean","window","location","hostname","match","history","createBrowserHistory","alertConstants","userConstants","initialState","rootReducer","combineReducers","authentication","state","action","type","loggingIn","user","loggedIn","empList","loading","items","error","menuApprove","detail","viewdetail","approve","alert","message","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ThemeToggler","useColorMode","colorMode","toggleColorMode","Box","textAlign","py","mr","IconButton","size","icon","onClick","variant","alertActions","success","clear","client","axios","create","baseURL","timeout","headers","Accept","interceptors","response","use","data","Error","Promise","reject","Pesan","userService","loginUser","email","password","result","httpClient","request","url","method","token","token_firebase","device","mac","app","getEmp","userId","approval_user","menuService","getMenu","entity_cd","getDetail","approval_id","getViewDetail","entity","docNo","request_no","setApprove","status","requestm","doc_no","doc_date","remarks","reason_remarks","trx_type","approve_seq","level_no","login","dispatch","failure","a","Data","console","log","push","PrivateRoute","Component","component","rest","render","props","to","pathname","from","HomePage","users","useSelector","useDispatch","useEffect","UserId","align","justifyContent","Avatar","src","pict","m","name","float","Flex","flexWrap","maxW","mt","map","item","idx","p","borderWidth","rounded","flexBasis","variantColor","maxWidth","borderRadius","boxShadow","Text","fontSize","color","Divider","entity_name","Button","total","LoginPage","useState","inputs","setInputs","submitted","setSubmitted","handleChange","e","target","value","showPassword","setShowPassword","width","Heading","my","className","onSubmit","preventDefault","FormControl","FormLabel","Input","onChange","isRequired","InputGroup","h","Icon","CircularProgress","isIndeterminate","ApprovalPage","menu","getApproval","goBack","aria-label","style","marginLeft","top","alignContent","module","approval_name","total_doc","DetailPage","details","descs","numFormat","angka","Math","floor","toString","replace","ViewDetail","request_dept_name","request_staff_id","amount","document_descs","d","alignItems","mb","SimpleGrid","columns","spacing","Badge","px","approval_user_name","List","as","styleType","none","moment","format","bg","App","listen","ThemeProvider","theme","ColorModeProvider","CSSReset","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3a0046a1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","export const alertConstants = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    CLEAR: 'ALERT_CLEAR'\n};\n","export const userConstants = {\n  LOGIN_REQUEST: \"USERS_LOGIN_REQUEST\",\n  LOGIN_SUCCESS: \"USERS_LOGIN_SUCCESS\",\n  LOGIN_FAILURE: \"USERS_LOGIN_FAILURE\",\n\n  LOGOUT: \"USERS_LOGOUT\",\n\n  GETEMP_REQUEST: \"GETEMP_REQUEST\",\n  GETEMP_SUCCESS: \"GETEMP_SUCCESS\",\n  GETEMP_FAILURE: \"GETEMP_FAILURE\",\n\n  APPROVEMENU_REQUEST: \"APPROVEMENU_REQUEST\",\n  APPROVEMENU_SUCCESS: \"APPROVEMENU_SUCCESS\",\n  APPROVEMENU_FAILURE: \"APPROVEMENU_FAILURE\",\n\n  DETAIL_REQUEST: \"DETAIL_REQUEST\",\n  DETAIL_SUCCESS: \"DETAIL_SUCCESS\",\n  DETAIL_FAILURE: \"DETAIL_FAILURE\",\n\n\n  VIEWDETAIL_REQUEST: \"VIEWDETAIL_REQUEST\",\n  VIEWDETAIL_SUCCESS: \"VIEWDETAIL_SUCCESS\",\n  VIEWDETAIL_FAILURE: \"VIEWDETAIL_FAILURE\",\n\n  APPROVE_REQUEST: \"APPROVE_REQUEST\",\n  APPROVE_SUCCESS: \"APPROVE_SUCCESS\",\n  APPROVE_FAILURE: \"APPROVE_FAILURE\",\n\n};\n","import { userConstants } from \"../constants\";\n\nconst initialState = {};\n\nexport function authentication(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.LOGIN_REQUEST:\n      return {\n        loggingIn: true,\n        user: action.user,\n      };\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        loggedIn: true,\n        user: action.user,\n      };\n    case userConstants.LOGIN_FAILURE:\n      return {};\n    case userConstants.LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport { authentication } from './authentication.reducer';\nimport { empList, menuApprove, detail, viewdetail, approve} from './users.reducer';\nimport { alert } from './alert.reducer';\n\nconst rootReducer = combineReducers({\n  authentication,\n  empList,\n  menuApprove,\n  detail,\n  viewdetail,\n  approve,\n  alert\n});\n\nexport default rootReducer;","import { userConstants } from \"../constants\";\n\n\nexport function empList(state = {}, action) {\n  switch (action.type) {\n    case userConstants.GETEMP_REQUEST:\n      return {\n        loading: true,\n      };\n    case userConstants.GETEMP_SUCCESS:\n      return {\n        items: action.empList,\n      };\n    case userConstants.GETEMP_FAILURE:\n      return {\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function menuApprove(state = {}, action) {\n  switch (action.type) {\n    case userConstants.APPROVEMENU_REQUEST:\n      return {\n        loading: true,\n      };\n    case userConstants.APPROVEMENU_SUCCESS:\n      return {\n        items: action.menuApprove\n      };\n    case userConstants.APPROVEMENU_FAILURE:\n      return {\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function detail(state = {}, action) {\n  switch (action.type) {\n    case userConstants.DETAIL_REQUEST:\n      return {\n        loading: true,\n      };\n    case userConstants.DETAIL_SUCCESS:\n      return {\n        items: action.detail\n      };\n    case userConstants.DETAIL_FAILURE:\n      return {\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\n\nexport function viewdetail(state = {}, action) {\n  switch (action.type) {\n    case userConstants.VIEWDETAIL_REQUEST:\n      return {\n        loading: true,\n      };\n    case userConstants.VIEWDETAIL_SUCCESS:\n      return {\n        items: action.viewdetail\n      };\n    case userConstants.VIEWDETAIL_FAILURE:\n      return {\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\n\nexport function approve(state = {}, action) {\n  switch (action.type) {\n    case userConstants.VIEWDETAIL_REQUEST:\n      return {\n        loading: true,\n      };\n    case userConstants.VIEWDETAIL_SUCCESS:\n      return {\n        items: action.approve\n      };\n    case userConstants.VIEWDETAIL_FAILURE:\n      return {\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\n\n","import { alertConstants } from '../constants';\n\nexport function alert(state = {}, action) {\n  switch (action.type) {\n    case alertConstants.SUCCESS:\n      return {\n        type: 'alert-success',\n        message: action.message\n      };\n    case alertConstants.ERROR:\n      return {\n        type: 'alert-danger',\n        message: action.message\n      };\n    case alertConstants.CLEAR:\n      return {};\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);","import React from 'react';\nimport { useColorMode, Box, IconButton } from '@chakra-ui/core';\n\nexport default function ThemeToggler() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Box textAlign=\"right\" py={4} mr={12}>\n      <IconButton\n        size=\"lg\"\n        icon={colorMode === 'light' ? 'moon' : 'sun'}\n        onClick={toggleColorMode}\n        variant=\"ghost\"\n      />\n    </Box>\n  );\n}\n","import { alertConstants } from '../constants';\n\nexport const alertActions = {\n    success,\n    error,\n    clear\n};\n\nfunction success(message) {\n    return { type: alertConstants.SUCCESS, message };\n}\n\nfunction error(message) {\n    return { type: alertConstants.ERROR, message };\n}\n\nfunction clear() {\n    return { type: alertConstants.CLEAR };\n}","import axios from \"axios\";\n\n/*\n  Base client config for your application.\n  Here you can define your base url, headers,\n  timeouts and middleware used for each request.\n*/\nconst client = axios.create({\n  baseURL: \"http://35.198.219.220:2121/pakuwonAPI/\",\n// baseURL: \"http://35.198.219.220:2121/vasantaAPI\",\n\n  timeout: 10000,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nclient.interceptors.response.use(\n  response => {\n    return !response.data.Error\n      ? response.data\n      : Promise.reject(response.data.Pesan);\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// const client = axios.create({\n//   baseURL: API_URL,\n//   timeout: 100000,\n//   headers: {\n//     Accept: \"application/json\",\n//     \"Content-Type\": \"application/json\"\n//   },\n// });\n\n// // Custom middleware for requests (this one just logs the error).\n// client.interceptors.request.use(config => config, (error) => {\n//   console.log('Failed to make request with error:');\n//   console.log(error);\n//   return Promise.reject(error);\n// });\n\n// // Custom middleware for responses (this one just logs the error).\n// client.interceptors.response.use(response => response, (error) => {\n//   console.log('Request got response with error:');\n//   console.log(error);\n//   return Promise.reject(error);\n// });\n\nexport default client;\n","import { login } from \"../data/userControl\";\nimport EmpData from \"../data/DashBoardPage.json\";\nimport httpClient from \"../data/httpClient\"\n\n\nexport const userService = {\n  loginUser,\n  getEmp,\n};\n\nfunction loginUser(email, password) {\n  try {\n    const result = httpClient.request({\n      url: `c_auth/login`,\n      method: \"POST\",\n      data: {\n        email,\n        password,\n        token: \"\",\n        token_firebase: \"token test\",\n        device: \"ios\",\n        mac: \"mac test\",\n        app: \"A\"\n      }\n    });\n    if (result.Error) {\n      return Promise.reject(result.Pesan);\n    } else {\n      return result;\n    }\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nfunction getEmp(userId) {\n  try {\n    const result = httpClient.request({\n      url: `c_approval/groupMenu`,\n      method: \"POST\",\n      data: {\n        approval_user: userId,\n\n      },\n    });\n    return  result;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\n// getApproveMenu = async (userId,entity_cd)=> {\n//   try {\n//     const result = await httpClient.request({\n//       url: `c_approval//approvalMenu`,\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\" : \"application/json\"\n//       },\n//       data: {\n//         approval_user: userId,\n//         entity_cd: entity_cd,\n\n//       },\n//     });\n//     console.log('test', result)\n//     return result;\n//   } catch (error) {\n//     return Promise.reject(error);\n//   }\n// }\n","import { login } from \"../data/userControl\";\nimport EmpData from \"../data/DashBoardPage.json\";\nimport httpClient from \"../data/httpClient\"\n\n\nexport const menuService = {\n  getMenu,\n  getDetail,\n  getViewDetail,\n  setApprove\n};\n\n\n\nfunction getMenu(userId, entity_cd) {\n  try {\n    const result = httpClient.request({\n      url: `c_approval/approvalMenu`,\n      method: \"POST\",\n      data: {\n        approval_user : userId,\n        entity_cd : entity_cd\n\n      },\n    });\n    return result;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\n\nfunction getDetail(approval_user, approval_id, entity_cd) {\n  try {\n    const result = httpClient.request({\n      url: `c_approval/viewMenu`,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n          approval_user: approval_user,\n          approval_id: approval_id,\n          entity_cd: entity_cd,\n      },\n    });\n    return result;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\n\nfunction getViewDetail(approval_user, entity, docNo, approval_id) {\n  try {\n    const result = httpClient.request({\n      url: `c_approval/otorisasi`,\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        approval_user: approval_user,\n        entity_cd: entity,\n        request_no: docNo,\n        approval_id: approval_id,\n      },\n    });\n    return result;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\n\nfunction setApprove(status, data, requestm) {\n  try {\n    const result = httpClient.request({\n      url: `c_approval/updateApproval/${status}`,\n      method: \"POST\",\n      data: {\n        entity_cd: data.entity_cd,\n          doc_no: data.doc_no,\n          status,\n          doc_date: data.doc_date,\n          remarks: data.reason_remarks,\n          approval_id: data.approval_id,\n          trx_type: data.trx_type,\n          approve_seq: data.approve_seq,\n          level_no: data.level_no,\n          approval_user: data.approval_user,\n          // request_no: data.doc_no,\n          requestm: requestm,\n      },\n    });\n    return result;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}","import { userConstants } from \"../constants\";\nimport { userService, menuService } from \"../services\";\nimport { history } from \"../helpers\";\n\n\n\nexport const login = (email, password) => async dispatch =>{ \n  dispatch(request());\n  try {\n    const user = await userService.loginUser(email, password);\n    dispatch(success(user.Data));\n    console.log(user);\n    history.push(\"/home\");\n\n    // alert(\"JSON.stringify(user)\");\n  } catch (error) {\n    alert(error);\n    dispatch(failure(error));\n  }\n\n\n  function request(user) {\n    return { type: userConstants.LOGIN_REQUEST, user };\n  }\n  function success(user) {\n    return { type: userConstants.LOGIN_SUCCESS, user };\n  }\n  function failure(error) {\n    return { type: userConstants.LOGIN_FAILURE, error };\n  }\n}\n\nfunction logout() {\n  return { type: userConstants.LOGOUT };\n}\n\nexport const getEmps = (userId) => async (dispatch) => {\n\n  dispatch(request());\n  try {\n    const empList = await userService.getEmp(userId);\n    dispatch(success(empList.Data))\nconsole.log(empList)\n    } catch (error) {\n      dispatch(failure(error))\n\n    }\n  function request() {\n    return { type: userConstants.GETEMP_REQUEST };\n  }\n  function success(empList) {\n    return { type: userConstants.GETEMP_SUCCESS, empList };\n  }\n  function failure(error) {\n    return { type: userConstants.GETEMP_FAILURE, error };\n  }\n}\n\n\nexport const getApproval = (userId, entity_cd) => async (dispatch) => {\n\n  dispatch(request());\n  try {\n    const menuApprove = await menuService.getMenu(userId, entity_cd);\n    dispatch(success(menuApprove.Data))\nconsole.log(menuApprove)\n    } catch (error) {\n      dispatch(failure(error))\n\n    }\n  function request() {\n    return { type: userConstants.APPROVEMENU_REQUEST };\n  }\n  function success(menuApprove) {\n    return { type: userConstants.APPROVEMENU_SUCCESS, menuApprove };\n  }\n  function failure(error) {\n    return { type: userConstants.APPROVEMENU_FAILURE, error };\n  }\n}\n\nexport const getDetail = (approval_user, approval_id, entity_cd) => async (dispatch) => {\n\n  dispatch(request());\n  try {\n    const detail = await menuService.getDetail(approval_user, approval_id, entity_cd);\n    dispatch(success(detail.Data))\nconsole.log(detail)\n    } catch (error) {\n      dispatch(failure(error))\n\n    }\n  function request() {\n    return { type: userConstants.DETAIL_REQUEST };\n  }\n  function success(detail) {\n    return { type: userConstants.DETAIL_SUCCESS, detail };\n  }\n  function failure(error) {\n    return { type: userConstants.DETAIL_FAILURE, error };\n  }\n}\n\nexport const getViewDetail = (\n  approval_user, entity, docNo, approval_id) => async (dispatch) => {\n\n  dispatch(request());\n  try {\n    const viewdetail = await menuService.getViewDetail(\n      approval_user, entity, docNo, approval_id)\n    dispatch(success(viewdetail.Data))\nconsole.log(viewdetail)\n    } catch (error) {\n      dispatch(failure(error))\n\n    }\n  function request() {\n    return { type: userConstants.VIEWDETAIL_REQUEST };\n  }\n  function success(viewdetail) {\n    return { type: userConstants.VIEWDETAIL_SUCCESS, viewdetail };\n  }\n  function failure(error) {\n    return { type: userConstants.VIEWDETAIL_FAILURE, error };\n  }\n}\n\nexport const approve = (\n  status,\n  data,\n  requestm,\n  UserId,\n  approval_id,\n  trx_type,\n  approve_seq,\n  level_no) => async (dispatch) => {\n\n  dispatch(request());\n  try {\n    const approved = await menuService.setApprove(status,\n      data,\n      requestm,\n      UserId,\n      approval_id,\n      trx_type,\n      approve_seq,\n      level_no)\n    dispatch(success(approved.Data))\nconsole.log(approved)\n    } catch (error) {\n      dispatch(failure(error))\n\n    }\n  function request() {\n    return { type: userConstants.APPROVE_REQUEST };\n  }\n  function success(approved) {\n    return { type: userConstants.APPROVE_SUCCESS, approved };\n  }\n  function failure(error) {\n    return { type: userConstants.APPROVE_FAILURE, error };\n  }\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({ user: user, component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      user ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{ pathname: \"/login\", state: { from: props.location } }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n","import React, { useEffect } from \"react\";\nimport {\n  Link,\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  Text,\n  InputGroup,\n  InputRightElement,\n  Icon,\n  Divider,\n  SimpleGrid,\n  Grid,\n  Avatar,\n} from \"@chakra-ui/core\";\n\nimport { getEmps } from \"../actions\";\nimport \"./HomePage.css\";\n\nfunction HomePage(props) {\n  const users = useSelector((state) => state.empList);\n  const user = useSelector((state) => state.authentication.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getEmps(user.UserId));\n  }, []);\n\n  return (\n    <>\n      <div align=\"center\" justifyContent=\"center\">\n        <Avatar src={user.pict} m=\"4\" />\n        <h1>Hi {user.name}!</h1>\n        <p float=\"right\">\n          <Link to=\"/login\">Logout</Link>\n        </p>\n      </div>\n      <div align=\"center\" justifyContent=\"center\">\n        <Flex\n          flexWrap=\"wrap\"\n          align=\"center\"\n          justifyContent=\"center\"\n          maxW=\"700px\"\n          mt=\"10\"\n        >\n          {users.items &&\n            users.items.map((item, idx) => {\n              return (\n                <Box\n                  p=\"6\"\n                  m=\"4\"\n                  align=\"center\"\n                  justifyContent=\"center\"\n                  borderWidth=\"1px\"\n                  rounded=\"lg\"\n                  flexBasis=\"45%\"\n                  variantColor=\"orange\"\n                  variant=\"outline\"\n                  maxWidth=\"500px\"\n                  borderRadius={8}\n                  boxShadow=\"lg\"\n                  key={idx}\n                >\n                  <Text fontSize=\"xl\" color=\"#F6AD55\">\n                    {item.entity_cd}\n                  </Text>\n                  <Divider />\n                  <Text>{item.entity_name}</Text>\n                  <Divider />\n                  <Button fontSize=\"xl\" p=\"4\">\n                    Total :{\" \"}\n                    <Link\n                      to={{ pathname: \"/menu\", state: {Data : item}}}\n                      key={idx}\n                    >\n                      <Text color=\"#38B2AC\" m=\"2\">\n                        {item.total}\n                      </Text>\n                    </Link>\n                  </Button>\n                </Box>\n              );\n            })}\n        </Flex>\n      </div>\n    </>\n  );\n}\n\nexport { HomePage };\n{\n  /* <Link to={{ pathname: '/menu/'+item.entity_cd}} key={idx}></Link> */\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  Text,\n  InputGroup,\n  InputRightElement,\n  Icon\n} from '@chakra-ui/core';\nimport { login } from \"../actions\";\n\nfunction LoginPage() {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const { email, password } = inputs;\n  const loggingIn = useSelector((state) => state.authentication.loggingIn);\n  const alert = useSelector((state) => state.alert);\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(userActions.logout());\n  // }, []);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setSubmitted(true);\n    if (email && password) {\n      dispatch(login(email, password));\n    }\n  }\n  const [showPassword, setShowPassword] = useState(false);\n\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n\n\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box\n        p={8}\n        maxWidth=\"500px\"\n        borderWidth={1}\n        borderRadius={8}\n        boxShadow=\"lg\"\n      >\n        <div>\n   <Box textAlign=\"center\">\n              <Heading>Login</Heading>\n            </Box>\n            <Box my={4} textAlign=\"left\">\n      <form name=\"form\" className=\"form\" onSubmit={handleSubmit}>\n        {alert.message && (\n          <div className={`alert ${alert.type}`}>{alert.message}</div>\n        )}\n        <FormControl>\n          <FormLabel>Username</FormLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            className={\n              \"form-control\" + (submitted && !email ? \" is-invalid\" : \"\")\n            }\n          />\n          {submitted && !email && (\n            <div className=\"invalid-feedback\">Username is required</div>\n          )}\n        </FormControl>\n        <FormControl isRequired mt={6}>\n          <FormLabel>Password</FormLabel>\n          <InputGroup>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            \n          />\n            <InputRightElement width=\"3rem\">\n                      <Button\n                        h=\"1.5rem\"\n                        size=\"sm\"\n                        onClick={handlePasswordVisibility}\n                      >\n                        {showPassword ? (\n                          <Icon name=\"view-off\" />\n                        ) : (\n                          <Icon name=\"view\" />\n                        )}\n                      </Button>\n                    </InputRightElement>\n          {/* {submitted && !password && (\n            <div className=\"invalid-feedback\">Password is required</div>\n          )} */}\n          \n          </InputGroup>\n        </FormControl>\n        <Button\n                  variantColor=\"teal\"\n                  variant=\"outline\"\n                  type=\"submit\"\n                  width=\"full\"\n                  mt={4}\n                >\n            {loggingIn ? (\n              <CircularProgress   isIndeterminate\n              size=\"24px\"\n              color=\"teal\"/>\n            ) : (\n                'Sign In'\n            )}\n          </Button>\n      </form>\n      </Box>\n      </div>\n    </Box>\n    </Flex>\n  );\n}\n\nexport { LoginPage };\n","import React, { useCallback, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  Text,\n  InputGroup,\n  InputRightElement,\n  Icon,\n  Divider,\n  SimpleGrid,\n  Grid,\n  Avatar,\n  IconButton\n} from '@chakra-ui/core';\nimport { history } from \"../helpers\"\n\nimport { getEmps, getApproval } from \"../actions\";\n\nfunction ApprovalPage(props) {\n    console.log(\"peorss\",props)\n\n    const { Data, entity_cd }= props.location.state.Data;\n    console.log(\"mau\", props.location.state.Data)\n  \n  const menu = useSelector((state) => state.menuApprove);\n  const users = useSelector((state) => state.empList);\n  const user = useSelector((state) => state.authentication.user);\n  const dispatch = useDispatch();\n\n  // const getApprovals = useCallback(async () => {\n  //   await dispatch(getApproval(user.UserId, entity_cd));\n  // }, [dispatch]);\n  useEffect(() => {\n    dispatch(getApproval(user.UserId, entity_cd));\n  }, []);\n\n  return (\n    <>\n     <Link\n          to=\"\"\n          onClick={(e) => {\n            e.preventDefault();\n            history.goBack();\n          }}\n        >\n           <IconButton\n        variant=\"outline\"\n        variantColor=\"teal\"\n        aria-label=\"Send email\"\n        icon=\"chevron-left\"\n        style={{\n          marginLeft: \"50px\",\n          top: \"-50px\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          textAlign: \"center\",\n        }}\n      />\n        </Link>\n     <div align=\"center\" justifyContent=\"center\">\n     <Avatar src={user.pict} m=\"4\" />\n        <h1>Hi {user.name}!</h1>\n      <p  float=\"right\">\n        <Link to=\"/login\">Logout</Link>\n      </p>\n      </div>\n      <div align=\"center\" justifyContent=\"center\">\n        <Flex\n          flexWrap=\"wrap\"\n          align=\"center\"\n          justifyContent=\"center\"\n          maxW=\"700px\"\n          mt=\"10\"\n        >\n          {menu.items &&\n            menu.items.map((item, idx) => {\n              return (\n                <Box\n                  p=\"6\"\n                  m=\"4\"\n                  align=\"center\"\n                  justifyContent=\"center\"\n                  borderWidth=\"1px\"\n                  rounded=\"lg\"\n                  flexBasis=\"45%\"\n                  variantColor=\"orange\"\n                  variant=\"outline\"\n                  maxWidth=\"500px\"\n                  borderRadius={8}\n                  boxShadow=\"lg\"\n                  key={idx}\n                >\n                  <Text fontSize=\"xl\" color=\"#F6AD55\">\n                    {item.entity_cd}\n                  </Text>\n                  <Text>{item.module}</Text>\n                  <Divider />\n                  <Text>{item.approval_name}</Text>\n                  <Text>{item.approval_id}</Text>\n\n                  <Text>{item.approval_user}</Text>\n\n                  <Divider />\n                  <Button fontSize=\"xl\" p=\"4\">\n                    Total :{\" \"}\n                    <Link\n                      to={{ pathname: \"/detail\", state: {Data : item}}}\n                      key={idx}\n                    >\n                      <Text color=\"#38B2AC\" m=\"2\">\n                        {item.total_doc}\n                      </Text>\n                      </Link>\n                  </Button>\n                </Box>\n              );\n            })}\n        </Flex>\n      </div>\n    </>\n  );\n}\n\nexport { ApprovalPage };","import React, { useCallback, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  Text,\n  InputGroup,\n  InputRightElement,\n  Icon,\n  Divider,\n  IconButton,\n  Grid,\n  Avatar,\n} from \"@chakra-ui/core\";\n\nimport { getDetail } from \"../actions\";\nimport { history } from \"../helpers\";\n\nfunction DetailPage(props) {\n  console.log(\"peorss\", props);\n\n  const { entity_cd, approval_id } = props.location.state.Data;\n  console.log(\"detail\", props.location.state.Data);\n\n  const menu = useSelector((state) => state.menuApprove);\n  const details = useSelector((state) => state.detail);\n  const user = useSelector((state) => state.authentication.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getDetail(user.UserId, approval_id, entity_cd));\n  }, []);\n\n  return (\n    <>\n        <Link\n          to=\"\"\n          onClick={(e) => {\n            e.preventDefault();\n            history.goBack();\n          }}\n        >\n           <IconButton\n        variant=\"outline\"\n        variantColor=\"teal\"\n        aria-label=\"Send email\"\n        icon=\"chevron-left\"\n        style={{\n          marginLeft: \"50px\",\n          top: \"-50px\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          textAlign: \"center\",\n        }}\n      />\n        </Link>\n      <div align=\"center\" justifyContent=\"center\">\n        <Avatar src={user.pict} m=\"4\" />\n        <h1>Hi {user.name}!</h1>\n        <p float=\"right\">\n          <Link to=\"/login\">Logout</Link>\n        </p>\n      </div>\n      <div align=\"center\" justifyContent=\"center\">\n        <Flex\n          flexWrap=\"wrap\"\n          align=\"center\"\n          justifyContent=\"center\"\n          maxW=\"700px\"\n          mt=\"10\"\n        >\n          {details.items &&\n            details.items.map((item, idx) => {\n              return (\n                <Box\n                  p=\"6\"\n                  m=\"4\"\n                  align=\"center\"\n                  justifyContent=\"center\"\n                  borderWidth=\"1px\"\n                  rounded=\"lg\"\n                  flexBasis=\"45%\"\n                  variantColor=\"orange\"\n                  variant=\"outline\"\n                  maxWidth=\"500px\"\n                  borderRadius={8}\n                  boxShadow=\"lg\"\n                  key={idx}\n                >\n                  <Text fontSize=\"xl\" color=\"#F6AD55\">\n                    {item.entity_cd}\n                  </Text>\n                  <Text>{item.doc_no}</Text>\n                  <Text>{item.approval_id}</Text>\n                  <Text>{item.module}</Text>\n                  <Divider />\n                  <Text>{item.approval_name}</Text>\n                  <Text>{item.approval_user}</Text>\n\n                  <Divider />\n                  <Text>{item.descs}</Text>\n                  <Divider />\n\n                  <Button fontSize=\"xl\" p=\"4\">\n                    <Link\n                      to={{ pathname: \"/viewdetail\", state: { Data: item } }}\n                      key={idx}\n                    >\n                      <h5>View Detail</h5>\n                    </Link>\n                  </Button>\n                </Box>\n              );\n            })}\n        </Flex>\n      </div>\n    </>\n  );\n}\n\nexport { DetailPage };\n","export default function numFormat(angka) {\n    const data = Math.floor(angka)\n    if(data==null){\n        data =0;\n      }\n      return data.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n}","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  Tooltip,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  Text,\n  InputGroup,\n  InputRightElement,\n  Icon,\n  Divider,\n  SimpleGrid,\n  Grid,\n  Avatar,\n  Badge,\n  Stack,\n  List,\n  IconButton,\n  ListItem,\n} from \"@chakra-ui/core\";\n\nimport {history } from \"../helpers\"\nimport { getViewDetail } from \"../actions\";\nimport moment from \"moment\";\nimport numFormat from \"../components/numFormat\";\n\nconst status_descs = {\n  P: \"Pending\",\n  R: \"Revise\",\n  C: \"Cancel\",\n  A: \"Approve\",\n};\n\nfunction ViewDetail(props) {\n  console.log(\"peorss\", props);\n\n\n  const {\n    request_dept_name,\n    request_staff_id,\n    doc_no,\n    request_no,\n    amount,\n    entity_cd,\n    entity_name,\n    descs,\n    doc_date,\n    module: modules,\n    document_descs,\n    approval_id,\n    approval_user,\n  } = props.location.state.Data;\n  console.log(\"viewdetail\", props.location.state.Data);\n\n  const data = props.location.state.Data;\n\n  const viewdetail = useSelector((state) => state.viewdetail);\n\n  const details = useSelector((state) => state.detail);\n  const user = useSelector((state) => state.authentication.user);\n  const [activeType, setActiveType] = useState(\"\");\n  const [remarks, setRemarks] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const handleRemarks = (val) => {\n    setRemarks(val);\n    data.reason_remarks = val;\n  };\n\n  const onPressed = (type) => {\n    setModalVisible(true);\n    if (type == \"A\") {\n      setRemarks(\"\");\n    }\n    setActiveType(type);\n  };\n\n  useEffect(() => {\n    dispatch(\n      getViewDetail(user.UserId, entity_cd, doc_no, approval_id, approval_user)\n    );\n  }, []);\n\n  return (\n    <>\n     <Link\n          to=\"\"\n          onClick={(e) => {\n            e.preventDefault();\n            history.goBack();\n          }}\n        >\n           <IconButton\n        variant=\"outline\"\n        variantColor=\"teal\"\n        aria-label=\"Send email\"\n        icon=\"chevron-left\"\n        style={{\n          marginLeft: \"50px\",\n          top: \"-50px\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          textAlign: \"center\",\n        }}\n      />\n        </Link>\n      <div align=\"center\" justifyContent=\"center\">\n        <Avatar src={user.pict} m=\"4\" />\n        <h1>Hi {user.name}!</h1>\n        <p float=\"right\">\n          <Link to=\"/login\">Logout</Link>\n        </p>\n        \n      </div>\n\n      <div align=\"center\" justifyContent=\"center\">\n        <Flex align=\"center\" justifyContent=\"center\" maxW=\"700px\" mt=\"10\">\n          {viewdetail.items &&\n            viewdetail.items.map((item, idx) => {\n              return (\n                <Box\n                  p=\"6\"\n                  m=\"4\"\n                  borderWidth=\"1px\"\n                  rounded=\"lg\"\n                  variantColor=\"orange\"\n                  variant=\"outline\"\n                  maxWidth=\"500px\"\n                  borderRadius={8}\n                  boxShadow=\"lg\"\n                  key={idx}\n                >\n                  <Box d=\"flex\" alignItems=\"baseline\" mb=\"4\">\n                    <SimpleGrid columns={2} spacing=\"20px\">\n                      <Badge rounded=\"full\" px=\"2\" variantColor=\"teal\">\n                        {item.approval_user_name}\n                      </Badge>\n                      <Badge rounded=\"full\" px=\"2\" variantColor=\"teal\">\n                        {item.module}\n                      </Badge>\n                    </SimpleGrid>\n                  </Box>\n                  <Box d=\"flex\" alignItems=\"baseline\">\n                    <List as=\"ol\" styleType=\"none\">\n                      <ListItem\n                        none\n                        fontSize=\"xs\"\n                        align=\"left\"\n                        justifyContent=\"left\"\n                      >\n                        Doc no : {item.doc_no}\n                      </ListItem>\n                    </List>\n                  </Box>\n                  <Box d=\"flex\" alignItems=\"baseline\">\n                    <List as=\"ol\" styleType=\"none\">\n                      <ListItem fontSize=\"xs\">\n                        Doc data :{\" \"}\n                        {moment(item.doc_date).format(\"DD MMMM YYYY\")}\n                      </ListItem>\n                    </List>\n                  </Box>\n                  <Divider />\n                  <Box alignItems=\"baseline\" color=\"gray.500\">\n                    <List as=\"ol\" styleType=\"none\">\n                      <p style={{ fontSize: \"12px\", textAlign: \"left\" }}>\n                        {item.descs}\n                      </p>\n                    </List>\n                  </Box>\n                  <Divider />\n                  <Box d=\"flex\" alignItems=\"baseline\" mb=\"4\">\n                    <Text>Rp. {numFormat(item.amount)}</Text>\n                  </Box>\n                  <Box>\n                    <SimpleGrid columns={3} spacing=\"20px\">\n                      <Button variant=\"outline\">Revise</Button>\n                      <Button bg=\"green.600\"color=\"white.500\">Approval</Button>\n                      <Button variant=\"outline\">Cancel</Button>\n                    </SimpleGrid>\n                  </Box>\n                </Box>\n              );\n            })}\n        </Flex>\n      </div>\n    </>\n  );\n}\n\nexport { ViewDetail };\n","import React, { useEffect } from \"react\";\nimport { Router, Route, Switch, Redirect, Link} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  ThemeProvider,\n  theme,\n  ColorModeProvider,\n  CSSReset\n} from '@chakra-ui/core';\nimport  ThemeToggler  from '../theme/ThemeToggler';\n\n\nimport { history } from \"../helpers\";\nimport { alertActions } from \"../actions\";\nimport { PrivateRoute} from \"../components\";\nimport { HomePage } from \"../HomePage\";\nimport { LoginPage } from \"../LoginPage\";\nimport { ApprovalPage } from \"../ApprovalPage\"\n\nimport \"./App.css\"\nimport { DetailPage } from \"../Detail\";\nimport { ViewDetail } from \"../viewDetail\";\n\nfunction App(props) {\n  const user = useSelector((state) => state.authentication.user);\n  const menu = useSelector((state) => state.menuApprove);\n  const users = useSelector((state) => state.empList);\n\n\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    history.listen((location, action) => {\n      dispatch(alertActions.clear());\n    });\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ColorModeProvider>\n      <CSSReset />\n        <ThemeToggler />\n        \n        <Router history={history}>\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={HomePage} user={user} />\n            <Route  path=\"/menu\" component={ApprovalPage}  user={user} />\n            <Route  path=\"/detail\" component={DetailPage}  user={user}/>\n            <Route  path=\"/viewdetail\" component={ViewDetail}  user={user}/>\n            <Route path=\"/login\" component={LoginPage} />\n          \n\n            <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n        </Router>\n      </ColorModeProvider>\n    </ThemeProvider>\n  );\n}\n\nexport { App };\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport { store } from \"./helpers\";\nimport { App } from \"./App\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"app\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}